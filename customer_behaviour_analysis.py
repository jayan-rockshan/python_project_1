import csv
import unittest

def customerAnalysis():
    sales_data = []
    with open('supermarket_sales.csv', 'r') as file:
        reader = csv.reader(file)
        for row in reader:
            sales_data.append(row)

    list_len = len(sales_data)
    customer_id = []
    x = 1
    while(x < list_len):
        if(sales_data[x][1] not in customer_id):
            customer_id.append(sales_data[x][1])
        x = x + 1

    customer_totAmount = []
    len_customer_id = len(customer_id)
    count = 0
    while(count < len_customer_id):
        innerCount = 1
        totalSales = 0
        testList = []
        while (innerCount < list_len):
            if(customer_id[count] == sales_data[innerCount][1]):
                totalSales = totalSales + float(sales_data[innerCount][7])
            innerCount = innerCount + 1
        testList.insert(0, customer_id[count])
        testList.insert(1, totalSales)
        customer_totAmount.append(testList)
        count = count + 1

    return customer_totAmount

class TestCustomerAnalysis(unittest.TestCase):
    def test_analyze_customer_sales(self):
        # Calculate the expected result
        expected_result = [['373', 35.0], ['519', 6.0], ['885', 8.0], ['716', 127.0], ['557', 20.0], ['357', 34.0], ['498', 60.0], ['531', 21.0], ['274', 55.0], ['897', 104.0], ['986', 52.5], ['984', 15.0], ['608', 29.0], ['508', 57.0], ['864', 12.0], ['921', 10.5], ['561', 96.0], ['913', 20.0], ['278', 40.0], ['846', 4.0], ['439', 20.0], ['106', 60.0], ['774', 1.0], ['558', 32.0], ['685', 35.5], ['517', 38.5], ['923', 120.0], ['665', 35.0], ['649', 10.0], ['735', 20.0], ['653', 20.0], ['294', 34.0], ['606', 87.0], ['492', 15.0], ['727', 40.0], ['778', 7.0], ['283', 36.0], ['704', 47.0], ['593', 51.5], ['193', 6.0], ['449', 18.5], ['423', 6.0], ['621', 36.0], ['662', 30.0], ['545', 20.0], ['962', 128.0], ['676', 24.0], ['244', 4.5], ['111', 24.0], ['793', 60.0], ['162', 80.0], ['730', 90.0], ['983', 6.0], ['443', 16.5], ['980', 30.0], ['225', 35.0], ['781', 52.0], ['618', 31.0], ['570', 12.0], ['254', 40.0], ['130', 136.0], ['990', 5.0], ['609', 80.0], ['797', 24.0], ['824', 6.0], ['789', 48.0], ['692', 198.0], ['182', 24.0], ['260', 24.0], ['767', 6.0], ['350', 106.0], ['293', 77.5], ['461', 118.0], ['370', 79.0], ['590', 96.0], ['338', 21.0], ['187', 34.5], ['963', 20.0], ['173', 56.0], ['344', 36.0], ['801', 45.0], ['882', 8.0], ['289', 80.0], ['645', 14.0], ['199', 24.0], ['341', 38.0], ['870', 24.0], ['511', 4.0], ['172', 44.0], ['510', 36.0], ['947', 30.0], ['345', 9.0], ['297', 60.0], ['216', 108.0], ['436', 32.0], ['718', 8.0], ['684', 72.0], ['107', 120.0], ['895', 60.0], ['939', 2.0], ['197', 76.0], ['320', 17.5], ['764', 15.0], ['323', 35.0], ['445', 60.0], ['206', 25.0], ['513', 80.0], ['661', 35.0], ['177', 24.0], ['712', 64.0], ['215', 17.5], ['708', 120.0], ['477', 46.0], ['100', 10.5], ['814', 16.0], ['265', 40.0], ['703', 1.0], ['633', 1.5], ['888', 10.0], ['202', 21.0], ['518', 18.0], ['410', 12.0], ['722', 8.0], ['912', 100.0], ['280', 23.5], ['312', 81.0], ['579', 84.0], ['819', 40.0], ['213', 28.0], ['796', 6.0], ['620', 16.5], ['654', 96.0], ['688', 40.0], ['823', 94.0], ['680', 50.0], ['155', 60.0], ['575', 18.0], ['647', 20.0], ['236', 121.5], ['378', 164.0], ['850', 16.0], ['269', 6.0], ['896', 6.0], ['946', 13.5], ['310', 21.0], ['522', 40.0], ['406', 80.0], ['878', 100.0], ['126', 56.0], ['977', 8.0], ['893', 8.0], ['455', 32.0], ['886', 1.5], ['491', 56.0], ['657', 32.0], ['933', 30.0], ['800', 60.0], ['902', 51.0], ['935', 24.0], ['995', 20.5], ['538', 84.0], ['163', 22.5], ['190', 45.0], ['934', 9.0], ['728', 40.0], ['917', 46.5], ['616', 10.0], ['678', 36.0], ['102', 6.0], ['806', 40.0], ['384', 1.5], ['303', 13.5], ['396', 12.0], ['770', 25.5], ['299', 24.0], ['434', 10.0], ['371', 17.5], ['905', 5.0], ['659', 54.0], ['224', 50.0], ['415', 20.0], ['900', 4.0], ['857', 25.0], ['140', 1.5], ['644', 10.0], ['907', 24.0], ['446', 80.0], ['940', 23.0], ['448', 48.0], ['340', 9.0], ['507', 30.0], ['820', 104.0], ['930', 40.0], ['189', 72.0], ['809', 15.0], ['113', 99.0], ['783', 7.0], ['169', 28.0], ['474', 1.0], ['586', 8.0], ['967', 7.5], ['524', 84.0], ['664', 22.5], ['316', 90.0], ['369', 20.0], ['749', 63.0], ['389', 36.5], ['776', 90.0], ['388', 30.0], ['571', 28.0], ['769', 120.0], ['376', 60.0], ['402', 28.0], ['915', 14.0], ['435', 40.0], ['532', 1.5], ['432', 120.0], ['927', 12.0], ['989', 22.5], ['555', 14.0], ['425', 17.5], ['109', 16.0], ['416', 31.0], ['359', 27.0], ['252', 6.0], ['542', 65.0], ['955', 10.5], ['899', 4.0], ['771', 12.5], ['741', 69.0], ['458', 40.0], ['755', 3.0], ['112', 7.0], ['228', 51.5], ['261', 45.0], ['721', 9.0], ['559', 12.0], ['566', 32.0], ['985', 32.0], ['871', 80.0], ['337', 27.0], ['714', 9.0], ['752', 4.0], ['314', 35.0], ['537', 24.0], ['681', 50.0], ['493', 8.0], ['569', 1.5], ['877', 9.0], ['541', 12.0], ['379', 35.0], ['108', 40.0], ['372', 128.0], ['780', 72.0], ['706', 1.0], ['710', 10.0], ['313', 24.0], ['756', 15.0], ['125', 25.0], ['807', 10.5], ['867', 12.0], ['276', 27.0], ['672', 48.0], ['736', 4.0], ['377', 1.5], ['245', 16.0], ['509', 90.0], ['255', 10.0], ['960', 10.0], ['333', 146.0], ['779', 28.0], ['453', 1.5], ['578', 7.5], ['655', 60.0], ['408', 50.0], ['701', 18.0], ['413', 3.0], ['786', 72.0], ['348', 15.0], ['772', 20.0], ['431', 12.5], ['253', 112.0], ['390', 18.0], ['860', 20.0], ['729', 30.0], ['476', 6.0], ['849', 32.0], ['385', 9.0], ['845', 140.0], ['784', 18.0], ['424', 30.0], ['966', 32.0], ['951', 9.0], ['233', 17.5], ['248', 36.0], ['428', 40.0], ['623', 7.5], ['627', 40.0], ['957', 90.0], ['327', 18.0], ['411', 100.0], ['241', 120.0], ['246', 30.0], ['589', 6.0], ['551', 6.0], ['263', 64.0], ['181', 8.0], ['401', 22.5], ['588', 140.0], ['207', 50.0], ['210', 40.0], ['815', 9.0], ['362', 16.0], ['852', 8.0], ['942', 16.0], ['364', 10.0], ['331', 60.0], ['787', 56.0], ['485', 7.5], ['550', 24.0], ['554', 2.5], ['238', 30.0], ['613', 8.0], ['332', 48.0], ['612', 13.5], ['307', 40.0], ['137', 2.5], ['818', 64.0], ['677', 15.0], ['194', 7.5], ['587', 28.0], ['916', 4.0], ['134', 4.5], ['556', 72.0], ['466', 90.0], ['128', 5.0], ['330', 27.0], ['258', 32.0], ['497', 72.0], ['308', 40.0], ['763', 40.0], ['494', 56.0], ['726', 40.0], ['203', 96.0], ['744', 16.0], ['499', 40.0], ['188', 32.0], ['695', 7.5], ['427', 6.0], ['204', 60.0], ['257', 8.0], ['419', 3.0], ['311', 24.0], ['266', 10.0], ['300', 2.0], ['506', 30.0], ['247', 24.0], ['959', 80.0], ['352', 4.0], ['553', 40.0], ['286', 32.0], ['922', 30.0], ['950', 50.0], ['441', 20.0], ['536', 12.5], ['750', 7.0], ['880', 7.5], ['306', 4.0], ['183', 21.0], ['803', 21.0], ['483', 7.5], ['562', 4.5], ['765', 15.0], ['988', 50.0], ['489', 4.0], ['171', 45.0], ['568', 40.0], ['452', 6.0], ['862', 40.0], ['486', 5.0], ['585', 84.0], ['174', 48.0], ['414', 10.0], ['683', 2.0], ['648', 24.0], ['433', 25.0], ['785', 28.0], ['198', 25.0]]
        result = customerAnalysis()
        self.assertEqual(result, expected_result)

if __name__ == '__main__':
    unittest.main()
